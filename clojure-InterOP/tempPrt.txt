(defproject clojure-InterOP "1.0.3-SNAPSHOT"
  :description "Demonstration of clojure/java interOP"
  :dependencies [[org.clojure/clojure "1.8.0"]]
  
  
    :main clojure-InterOP.core
    :aot 
    :all
  )
  
(ns clojure-InterOP.core
(:import utils.demo)  ;; java source file needs to be compiled to a class file
       	(:gen-class ))

(defn -main [& args]
  ;; compiles but error on execution
 ;; (let [d (utils.demo. )]     (.twice  d))
 ;;(println (utils.demo. 4 ) )
  (println (. demo twice 5 ))
    (println (. demo twice 5.0 ))
  (println (. demo half 5 ))
    (println (. demo half 5.0 ))
        (println (. demo half2 5.0 ))
  (println (. demo halves 3 5 ))  
    (println (. demo halves 3.0 5.0 )) 
        (println (. demo halves2 3.0 5.0 )) 
        (println (. demo letters1 ))
  (doseq [j (range 2 20 3) ] (println (. demo twice j)))
)
package utils;

public class demo {
	public static int twice (int a){
	return a+a;
	}

	public static double half (int a){
	return a/2;
	}
	
	public static double halves (int a, int b){
	return a/2 + b/2;
	}
	
	public static double halves2 (double a, double b){
	return a/2 + b/2;
	}
	
	public static double half2 (double a){
	return a/2;
	}
	
	public static String letters1 (){
		return "some letters";
	}
}
